volumes:
  kestra-data:
    name: kestra-data
    #driver: local
    external: true

networks:
 pg-network:
   driver: bridge
   external: true

services:
  kestra:
    image: kestra/kestra:v0.20.14
    # container-name: kestra_local
    # pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: ${user}
    command: server standalone
    volumes:
      #- ./kestra-plugins:/app/plugins # Since we downloaded the plugins manually
      - "kestra-data:/app/storage"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/tmp/kestra-wd:/tmp/kestra-wd"
      - "/home/super/project/kafka/:/app/scripts"
      - "flows/:/app/flows"
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: ${username}
            password: ${password}
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    networks:
     - pg-network
    ports:
      - "8080:8080"
      - "8081:8081"
